{"ast":null,"code":"var _jsxFileName = \"/Users/thomasderegt/wheel-of-islam-app/frontend/src/context/LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState(localStorage.getItem('language') || 'english');\n  useEffect(() => {\n    localStorage.setItem('language', language);\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageProvider, \"bygJ1tvm+q+DTCJNT/MfmaX5Q/E=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  return useContext(LanguageContext);\n};\n_s2(useLanguage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","setLanguage","localStorage","getItem","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","$RefreshReg$"],"sources":["/Users/thomasderegt/wheel-of-islam-app/frontend/src/context/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState(localStorage.getItem('language') || 'english');\n  \n  useEffect(() => {\n    localStorage.setItem('language', language);\n  }, [language]);\n  \n  return (\n    <LanguageContext.Provider value={{ language, setLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => useContext(LanguageContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC;EAEvFV,SAAS,CAAC,MAAM;IACdS,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACC,eAAe,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACX,EAAA,CAZWF,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAc7B,OAAO,MAAMe,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtB,UAAU,CAACK,eAAe,CAAC;AAAA;AAACiB,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}